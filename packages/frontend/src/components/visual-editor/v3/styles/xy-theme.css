/* xyflow theme files. Delete these to start from our base */

.react-flow {
  --xy-background-color: #f7f9fb;
  /* Custom Variables */
  --xy-theme-selected: #1dc7fc;
  --xy-theme-hover: #c5c5c5;
  --xy-theme-edge-hover: black;
  --xy-theme-color-focus: #e8e8e8;

  /* Built-in Variables see https://reactflow.dev/learn/customization/theming */
  --xy-node-border-default: 1px solid #ededed;

  --xy-node-boxshadow-default: 0px 3.54px 4.55px 0px #00000005,
    0px 3.54px 4.55px 0px #0000000d, 0px 0.51px 1.01px 0px #0000001a;

  --xy-node-border-radius-default: 14px;

  --xy-handle-background-color-default: #ffffff;
  --xy-handle-border-color-default: #aaaaaa;

  --xy-edge-label-color-default: #505050;
}

.react-flow.dark {
  --xy-node-boxshadow-default: 0px 3.54px 4.55px 0px rgba(255, 255, 255, 0.05),
    /* light shadow */ 0px 3.54px 4.55px 0px rgba(255, 255, 255, 0.13),
    /* medium shadow */ 0px 0.51px 1.01px 0px rgba(255, 255, 255, 0.2); /* smallest shadow */
  --xy-theme-color-focus: #535353;
}

.visual-editor {
  display: flex;
  flex-direction: column;
  height: 100%;
}

/* node */
.react-flow__node {
  border-radius: var(--xy-node-border-radius-default);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0;
  margin: 0;
  font-size: 12px;
  flex-direction: column;
  border: var(--xy-node-border-default);
  color: var(--xy-node-color, var(--xy-node-color-default));
  border-color: transparent;
  border-width: 2px;
}

.react-flow__node.selectable:focus {
  box-shadow: 0px 0px 0px 4px var(--xy-theme-color-focus);
  border-color: #d9d9d9;
}

.react-flow__node.selectable:focus:active {
  box-shadow: var(--xy-node-boxshadow-default);
}

.react-flow__node.selectable:hover,
.react-flow__node.draggable:hover {
  border-color: transparent;
  border-width: 2px;
}

.react-flow__node.selectable.selected {
  border-color: var(--xy-theme-selected);
  border-width: 2px;
  box-shadow: var(--xy-node-boxshadow-default);
}

.react-flow .selected {
  border-radius: 12px 0 12px 12px !important;
}

.react-flow__node.selectable.selected .custom-node {
  border-radius: 12px 0 12px 12px !important;
  transform: scale(1.06);
  transition: 0.2s;
  border-color: var(--xy-theme-selected) !important;
  border-width: 3px !important;
}

.react-flow__node.selectable.selected .node-title {
  border-radius: 9px 0 0 0 !important;
}

.react-flow__node-group {
  background-color: rgba(207, 182, 255, 0.4);
  border-color: #9e86ed;
}

/* .react-flow__edge.selectable:hover .react-flow__edge-path,
.react-flow__edge.selectable.selected .react-flow__edge-path {
  stroke: var(--xy-theme-edge-hover);
} */

.react-flow__node-resizer {
  border-radius: 0;
  border: none;
}

.react-flow__resize-control.handle {
  background-color: #ffffff;
  border-color: #9e86ed;
  border-radius: 0;
  width: 5px;
  height: 5px;
}

/* 
  Custom Example CSS  - This CSS is to improve the example experience.
  You can remove it if you want to use the default styles.

  New Theme Classes:
    .xy-theme__button   - Styles for buttons.
    .xy-theme__input    - Styles for text inputs.
    .xy-theme__checkbox - Styles for checkboxes.
    .xy-theme__select   - Styles for dropdown selects.
    .xy-theme__label    - Styles for labels.
  
  Use these classes to apply consistent theming across your components.
*/

:root {
  --color-primary: #ff0073;
  --color-background: #fefefe;
  --color-hover-bg: #f6f6f6;
  --color-disabled: #76797e;
}

.xy-theme__button-group {
  display: flex;
  align-items: center;

  .xy-theme__button:first-child {
    border-radius: 100px 0 0 100px;
  }

  .xy-theme__button:last-child {
    border-radius: 0 100px 100px 0;
    margin: 0;
  }
}

/* Custom Button Styling */
.xy-theme__button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 2.5rem;
  padding: 0 1rem;
  border-radius: 100px;
  border: 1px solid var(--color-primary);
  background-color: var(--color-background);
  color: var(--color-primary);
  transition: background-color 0.2s ease, border-color 0.2s ease;
  box-shadow: var(--xy-node-boxshadow-default);
  cursor: pointer;
}

.xy-theme__button.active {
  background-color: var(--color-primary);
  color: white;
  border-color: var(--color-primary);
}

.xy-theme__button.active:hover,
.xy-theme__button.active:active {
  background-color: var(--color-primary);
  opacity: 0.9;
}

.xy-theme__button:hover {
  background-color: var(--xy-controls-button-background-color-hover-default);
}

.xy-theme__button:active {
  background-color: var(--color-hover-bg);
}

.xy-theme__button:disabled {
  color: var(--color-disabled);
  opacity: 0.8;
  cursor: not-allowed;
  border: 1px solid var(--color-disabled);
}

.xy-theme__button > span {
  margin-right: 0.2rem;
}

/* Add gap between adjacent buttons */
.xy-theme__button + .xy-theme__button {
  margin-left: 0.3rem;
}

/* Example Input Styling */
.xy-theme__input {
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--color-primary);
  border-radius: 7px;
  background-color: var(--color-background);
  transition: background-color 0.2s ease, border-color 0.2s ease;
  font-size: 1rem;
  color: inherit;
}

.xy-theme__input:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 2px rgba(255, 0, 115, 0.3);
}

/* Specific Checkbox Styling */
.xy-theme__checkbox {
  appearance: none;
  -webkit-appearance: none;
  width: 1.25rem;
  height: 1.25rem;
  border-radius: 7px;
  border: 2px solid var(--color-primary);
  background-color: var(--color-background);
  transition: background-color 0.2s ease, border-color 0.2s ease;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  margin-right: 0.5rem;
}

.xy-theme__checkbox:checked {
  background-color: var(--color-primary);
  border-color: var(--color-primary);
}

.xy-theme__checkbox:focus {
  outline: none;
  box-shadow: 0 0 0 2px rgba(255, 0, 115, 0.3);
}

/* Dropdown Styling */
.xy-theme__select {
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--color-primary);
  border-radius: 50px;
  background-color: var(--color-background);
  transition: background-color 0.2s ease, border-color 0.2s ease;
  font-size: 1rem;
  color: inherit;
  margin-right: 0.5rem;
  box-shadow: var(--xy-node-boxshadow-default);
}

.xy-theme__select:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 2px rgba(255, 0, 115, 0.3);
}

.xy-theme__label {
  margin-top: 10px;
  margin-bottom: 3px;
  display: inline-block;
}

/* controls */
.react-flow__node #node-controls {
  visibility: hidden;
  right: 0;
  position: absolute;
  transition: opacity 0.4s, transform 0.1s;
  width: auto;
  transform: translateY(40px);
  opacity: 0;
  border-radius: 0;
}

.react-flow__node.selectable.selected #node-controls {
  opacity: 1;
  position: absolute;
  visibility: visible;
  transform: translateY(0px);
  border-radius: 9px 9px 0 0;
  top: -42px;
  right: -3px;
  border: 3px solid var(--xy-theme-selected);
  border-bottom: 3px solid #ddd;
  display: flex;
  background-color: #fff;
  background-image: linear-gradient(to top, #00000011, #00000000);
  box-shadow: 0 -2px 4px #c4c4c4;
  padding: 0;
}

.rf-minimap:hover {
  background: #fff !important;
}

.rf-controls {
  box-shadow: 0 0 8px #c4c4c4;
  border-radius: 6px;
  overflow: hidden;
  transition: 0.2s;
}

.rf-controls:not(:hover) button {
  background-color: #fffa;
}

/* onDragging */
.visual-editor:has(.react-flow__node.dragging) .rf-background {
  z-index: 1;
  background: transparent;
}

.visual-editor:has(.react-flow__node.dragging)
  #visual-editor-horizontal-controls,
.visual-editor:has(.react-flow__node.dragging) .rf-controls {
  opacity: 0.6;
  z-index: 1;
}

.visual-editor:has(.react-flow__node.dragging) [data-testid="rf__minimap"] {
  z-index: 1;
}

/* react flow logo */
.react-flow__attribution {
  visibility: hidden;
}

/* edges */
g.react-flow__edge path {
  transition: stroke 0.2s;
}

/* ports */
.react-flow__handle:not([aria-disabled="true"]) {
  background-color: var(--xy-handle-background-color-default);
  cursor: grab !important;
  pointer-events: all;
}

.react-flow__handle:not([aria-disabled="true"]):active {
  cursor: grabbing !important;
  pointer-events: all;
}

.react-flow__handle[aria-disabled="true"] {
  border: 1px solid #ccc;
  background-color: #eee !important;
  cursor: not-allowed;
  pointer-events: all;
}

.react-flow__handle.connectionindicator:hover {
  pointer-events: all;
  border-color: var(--xy-theme-edge-hover);
  background-color: white;
  transition: 0.2s;
  transform-origin: 0 !important;
}

.react-flow__handle.connectionindicator[data-handlepos="left"]:hover {
  transform: translate(-50%, -50%) scale(1.2);
  left: -8px !important;
}

.react-flow__handle.connectionindicator[data-handlepos="right"]:hover {
  transform: translate(50%, -50%) scale(1.2);
}

.react-flow__handle.connectionindicator:focus,
.react-flow__handle.connectingfrom,
.react-flow__handle.connectingto {
  border-color: var(--xy-theme-edge-hover);
}

.startPointLine {
  position: relative;
  left: 17px;
  top: 34px;
  border-left: 1px solid #999;
  border-bottom: 1px solid #999;
  width: 30px;
  height: 20px;
}

.react-flow__pane.connectStart {
  cursor: grabbing !important;
}

.node-header-icon {
  display: flex;
  background-color: white;
  border-radius: 100%;
  padding: 2px;
}
